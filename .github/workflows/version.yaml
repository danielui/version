name: Bump version
on:
  push:
    branches:
      - main

jobs:
#   add_tag:
#     runs-on: ubuntu-latest
#     outputs:
#       new_tag: ${{steps.new_tag.outputs.new_tag}}
#       old_tag: ${{steps.old_tag.outputs.tag}}
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         fetch-depth: '0'
#     - id: old_tag
#       name: Get old tag
#       uses: oprypin/find-latest-tag@v1
#       with:
#         repository: tomaszwarda/version
#     - id: new_tag
#       name: Bump version and push tag
#       uses: anothrNick/github-tag-action@1.40.0
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         WITH_V: true
#         DEFAULT_BUMP: patch
#   no_v:
#     runs-on: ubuntu-latest
#     needs: add_tag
#     outputs:
#       new_tag_no_v: ${{steps.no_v_new.outputs.test}}
#       old_tag_no_v: ${{steps.no_v_old.outputs.test}}
#     steps:
#       - id: no_v_old
#         name: Get old tag
#         run: |
#           tag=$(echo "${{needs.add_tag.outputs.old_tag}}" | sed 's/v//')
#           echo "::set-output name=test::$tag"
#       - id: no_v_new
#         name: Get new tag
#         run: |
#           tag=$(echo "${{needs.add_tag.outputs.new_tag}}" | sed 's/v//')
#           echo "::set-output name=test::$tag"
#   change_toml:
#     runs-on: ubuntu-latest
#     needs: no_v
#     steps:
#       - name: print
#         run: |
#           echo "${{needs.no_v.outputs.new_tag_no_v}}"
#           echo "${{needs.no_v.outputs.old_tag_no_v}}"
#       - name: Find and Replace
#         run: ls

  change_sth:
    runs-on: ubuntu-latest
    steps:
      - name: check
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
#       - name: Verify Changed files
#         uses: tj-actions/verify-changed-files@v11.1
#         id: verify-changed-files
#         with:
#           files: |
#              project.toml
#       - name: print
#         run: echo "${{steps.verify-changed-files.outputs.changed_files}}"
#       - name: Perform action when projecttoml changes
#         if: contains(steps.verify-changed-files.outputs.changed_files, 'project.toml')
#         run: |
#           echo "test_directory has changed."
      - id: files
        uses: jitterbit/get-changed-files@v1
#       - run: |
#           for changed_file in ${{ steps.files.outputs.all }}; do
#             echo "Do something with this ${changed_file}."
      - name: check for file
        if: contains(steps.files.outputs.all, 'project.toml') == 'true'
        run: echo "true"
#       - name: Determine Checkout Depth
#         uses: haya14busa/action-cond@v1
#         id: fetchDepth
#         with:
#           cond: contains(steps.files.outputs.all, 'project.toml')
#           if_true: run: echo "project.toml changed"
#           if_false: exit 1
      - name: chek versionyml
        if: contains(steps.files.outputs.all, 'version.yaml') == 'true'
        run: echo "v oke l"
